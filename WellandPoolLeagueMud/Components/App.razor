@using Microsoft.AspNetCore.Components.Routing
@inject IJSRuntime JS
@inject NavigationManager NavigationManager
@implements IDisposable

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <base href="/" />

    <link href="https://fonts.googleapis.com/css2?family=Lato:wght@300;400;700&family=Merriweather:wght@400;700&display=swap" rel="stylesheet">

    <link href="_content/MudBlazor/MudBlazor.min.css" rel="stylesheet" />

    <link href="css/app.css" rel="stylesheet" />

    <link rel="icon" type="image/ico" href="favicon.png" />

    <script async src="https://www.googletagmanager.com/gtag/js?id=G-DN04LZXWRS"></script>
    <script>
        window.dataLayer = window.dataLayer || [];
        function gtag(){dataLayer.push(arguments);}
        gtag('js', new Date());
        gtag('config', 'G-DN04LZXWRS');
    </script>

    <HeadOutlet @rendermode="InteractiveServer" />
</head>

<body>
    <Routes @rendermode="InteractiveServer" />
    <script src="_framework/blazor.web.js"></script>
    <script src="_content/MudBlazor/MudBlazor.min.js"></script>
</body>

</html>

@code {
    protected override void OnInitialized()
    {
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        var relativeUri = new Uri(e.Location).PathAndQuery;

        // Use JS interop to send a page_view event to Google Analytics
        JS.InvokeVoidAsync("gtag", "config", "G-DN04LZXWRS", new { page_path = relativeUri });
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}