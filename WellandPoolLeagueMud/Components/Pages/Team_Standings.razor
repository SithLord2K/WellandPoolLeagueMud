@page "/team_standings"
@attribute [StreamRendering]
@using MudBlazor
@using WellandPoolLeagueMud.Components.Buttons
@using WellandPoolLeagueMud.Data.Services
@using WellandPoolLeagueMud.Data.ViewModels
@inject StandingService standingService

<PageTitle>Team Standings</PageTitle>

@if (teamStandings is not null)
{
    @foreach (var divisionGroup in teamStandings.GroupBy(x => x.Division))
    {
        <MudText Typo="Typo.h6" Class="my-4">@divisionGroup.Key</MudText>
        <MudDataGrid TItem="TeamStandingViewModel"
                     Items="@divisionGroup.OrderByDescending(x => x.Points).ThenByDescending(x => x.TotalFramesWon).ToList()"
                     Hover="true"
                     Striped="true"
                     Dense="false"
                     Sortable="true">
            <ToolBarContent>
                <MudText Typo="Typo.h6">Team Standings</MudText>
                <MudSpacer />
                <MudTextField T="string" Placeholder="Search" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0" />
            </ToolBarContent>
            <Columns>
                <PropertyColumn Property="x => x.TeamName" Title="Team Name" />
                <PropertyColumn Property="x => x.WeeksWon" Title="Weeks Won" />
                <PropertyColumn Property="x => x.WeeksLost" Title="Weeks Lost" />
                <PropertyColumn Property="x => x.TotalFramesWon" Title="Games Won" />
                <PropertyColumn Property="x => x.TotalFramesLost" Title="Games Lost" />
                <PropertyColumn Property="x => x.Points" Title="Points" />
            </Columns>
            <PagerContent>
                <MudDataGridPager T="TeamStandingViewModel" />
            </PagerContent>
            <NoRecordsContent>
                <div class="box">
                    No Team Stats Found!
                </div>
            </NoRecordsContent>
        </MudDataGrid>
    }
}
else
{
    <MudProgressCircular Color="Color.Primary" Indeterminate="true" Class="m-4" />
}

<ScrollToTopButton />

@code {
    private List<TeamStandingViewModel>? teamStandings;

    protected override async Task OnInitializedAsync()
    {
        teamStandings = await standingService.GetTeamStandingsAsync();
    }
}