// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WellandPoolLeagueMud.Data;

#nullable disable

namespace WellandPoolLeagueMud.Migrations
{
    [DbContext(typeof(WPLMudDBContext))]
    partial class WPLMudDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("wiley")
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WellandPoolLeagueMud.Data.Models.WPL_Player", b =>
                {
                    b.Property<int>("PlayerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlayerId"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GamesPlayed")
                        .HasColumnType("int");

                    b.Property<bool>("IsCaptain")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TeamId")
                        .HasColumnType("int");

                    b.HasKey("PlayerId");

                    b.HasIndex("TeamId");

                    b.ToTable("WPL_Players", "wiley");
                });

            modelBuilder.Entity("WellandPoolLeagueMud.Data.Models.WPL_PlayerGame", b =>
                {
                    b.Property<int>("PlayerGameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlayerGameId"));

                    b.Property<int>("FramesLost")
                        .HasColumnType("int");

                    b.Property<int>("FramesWon")
                        .HasColumnType("int");

                    b.Property<int>("PlayerId")
                        .HasColumnType("int");

                    b.Property<int>("ScheduleId")
                        .HasColumnType("int");

                    b.Property<int>("WeekNumber")
                        .HasColumnType("int");

                    b.HasKey("PlayerGameId");

                    b.HasIndex("PlayerId");

                    b.HasIndex("ScheduleId");

                    b.ToTable("WPL_PlayerGames", "wiley");
                });

            modelBuilder.Entity("WellandPoolLeagueMud.Data.Models.WPL_Schedule", b =>
                {
                    b.Property<int>("ScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ScheduleId"));

                    b.Property<int>("AwayTeamId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Forfeit")
                        .HasColumnType("bit");

                    b.Property<DateTime>("GameDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("HomeTeamId")
                        .HasColumnType("int");

                    b.Property<bool>("Playoffs")
                        .HasColumnType("bit");

                    b.Property<int?>("TableNumber")
                        .HasColumnType("int");

                    b.Property<int>("WeekNumber")
                        .HasColumnType("int");

                    b.Property<int?>("WinningTeamId")
                        .HasColumnType("int");

                    b.HasKey("ScheduleId");

                    b.HasIndex("AwayTeamId");

                    b.HasIndex("HomeTeamId");

                    b.HasIndex("WinningTeamId");

                    b.ToTable("WPL_Schedules", "wiley");
                });

            modelBuilder.Entity("WellandPoolLeagueMud.Data.Models.WPL_Team", b =>
                {
                    b.Property<int>("TeamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TeamId"));

                    b.Property<int?>("CaptainPlayerId")
                        .HasColumnType("int");

                    b.Property<string>("TeamName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TeamId");

                    b.ToTable("WPL_Teams", "wiley");
                });

            modelBuilder.Entity("WellandPoolLeagueMud.Data.Models.WPL_WeeklyWinner", b =>
                {
                    b.Property<int>("WeeklyWinnerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WeeklyWinnerId"));

                    b.Property<int>("WeekNumber")
                        .HasColumnType("int");

                    b.Property<int>("WinningTeamId")
                        .HasColumnType("int");

                    b.HasKey("WeeklyWinnerId");

                    b.HasIndex("WinningTeamId");

                    b.ToTable("WPL_WeeklyWinners", "wiley");
                });

            modelBuilder.Entity("WellandPoolLeagueMud.Data.Models.WPL_Player", b =>
                {
                    b.HasOne("WellandPoolLeagueMud.Data.Models.WPL_Team", "Team")
                        .WithMany("Players")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Team");
                });

            modelBuilder.Entity("WellandPoolLeagueMud.Data.Models.WPL_PlayerGame", b =>
                {
                    b.HasOne("WellandPoolLeagueMud.Data.Models.WPL_Player", "Player")
                        .WithMany("PlayerGames")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WellandPoolLeagueMud.Data.Models.WPL_Schedule", "Schedule")
                        .WithMany()
                        .HasForeignKey("ScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Player");

                    b.Navigation("Schedule");
                });

            modelBuilder.Entity("WellandPoolLeagueMud.Data.Models.WPL_Schedule", b =>
                {
                    b.HasOne("WellandPoolLeagueMud.Data.Models.WPL_Team", "AwayTeam")
                        .WithMany()
                        .HasForeignKey("AwayTeamId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WellandPoolLeagueMud.Data.Models.WPL_Team", "HomeTeam")
                        .WithMany()
                        .HasForeignKey("HomeTeamId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WellandPoolLeagueMud.Data.Models.WPL_Team", "WinningTeam")
                        .WithMany()
                        .HasForeignKey("WinningTeamId");

                    b.Navigation("AwayTeam");

                    b.Navigation("HomeTeam");

                    b.Navigation("WinningTeam");
                });

            modelBuilder.Entity("WellandPoolLeagueMud.Data.Models.WPL_WeeklyWinner", b =>
                {
                    b.HasOne("WellandPoolLeagueMud.Data.Models.WPL_Team", "WinningTeam")
                        .WithMany()
                        .HasForeignKey("WinningTeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WinningTeam");
                });

            modelBuilder.Entity("WellandPoolLeagueMud.Data.Models.WPL_Player", b =>
                {
                    b.Navigation("PlayerGames");
                });

            modelBuilder.Entity("WellandPoolLeagueMud.Data.Models.WPL_Team", b =>
                {
                    b.Navigation("Players");
                });
#pragma warning restore 612, 618
        }
    }
}
