// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WellandPoolLeagueMud.Data;

#nullable disable

namespace WellandPoolLeagueMud.Migrations
{
    [DbContext(typeof(WellandPoolLeagueDbContext))]
    partial class WellandPoolLeagueDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("UserProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Auth0UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Auth0UserId")
                        .IsUnique()
                        .HasFilter("[Auth0UserId] IS NOT NULL");

                    b.ToTable("WPLMud_UserProfiles", (string)null);
                });

            modelBuilder.Entity("WellandPoolLeagueMud.Data.Models.Player", b =>
                {
                    b.Property<int>("PlayerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlayerId"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("TeamId")
                        .HasColumnType("int");

                    b.HasKey("PlayerId");

                    b.HasIndex("TeamId");

                    b.HasIndex("FirstName", "LastName");

                    b.ToTable("WPLMud_Players", (string)null);
                });

            modelBuilder.Entity("WellandPoolLeagueMud.Data.Models.PlayerGame", b =>
                {
                    b.Property<int>("PlayerGameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlayerGameId"));

                    b.Property<DateTime>("GameDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Losses")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("PlayerId")
                        .HasColumnType("int");

                    b.Property<int>("TeamId")
                        .HasColumnType("int");

                    b.Property<int>("WeekNumber")
                        .HasColumnType("int");

                    b.Property<int>("Wins")
                        .HasColumnType("int");

                    b.HasKey("PlayerGameId");

                    b.HasIndex("TeamId");

                    b.HasIndex("PlayerId", "WeekNumber", "TeamId");

                    b.ToTable("WPLMud_PlayerGames", (string)null);
                });

            modelBuilder.Entity("WellandPoolLeagueMud.Data.Models.Schedule", b =>
                {
                    b.Property<int>("ScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ScheduleId"));

                    b.Property<int>("AwayTeamId")
                        .HasColumnType("int");

                    b.Property<DateTime>("GameDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("HomeTeamId")
                        .HasColumnType("int");

                    b.Property<bool>("IsComplete")
                        .HasColumnType("bit");

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("WeekNumber")
                        .HasColumnType("int");

                    b.Property<int?>("WinningTeamId")
                        .HasColumnType("int");

                    b.HasKey("ScheduleId");

                    b.HasIndex("AwayTeamId");

                    b.HasIndex("HomeTeamId");

                    b.HasIndex("WinningTeamId");

                    b.HasIndex("WeekNumber", "GameDate");

                    b.ToTable("WPLMud_Schedules", (string)null);
                });

            modelBuilder.Entity("WellandPoolLeagueMud.Data.Models.Team", b =>
                {
                    b.Property<int>("TeamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TeamId"));

                    b.Property<int?>("CaptainPlayerId")
                        .HasColumnType("int");

                    b.Property<string>("TeamName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("TeamId");

                    b.HasIndex("CaptainPlayerId");

                    b.HasIndex("TeamName")
                        .IsUnique();

                    b.ToTable("WPLMud_Teams", (string)null);
                });

            modelBuilder.Entity("WellandPoolLeagueMud.Data.Models.Player", b =>
                {
                    b.HasOne("WellandPoolLeagueMud.Data.Models.Team", "Team")
                        .WithMany("Players")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Team");
                });

            modelBuilder.Entity("WellandPoolLeagueMud.Data.Models.PlayerGame", b =>
                {
                    b.HasOne("WellandPoolLeagueMud.Data.Models.Player", "Player")
                        .WithMany("PlayerGames")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WellandPoolLeagueMud.Data.Models.Team", "Team")
                        .WithMany("PlayerGames")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Player");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("WellandPoolLeagueMud.Data.Models.Schedule", b =>
                {
                    b.HasOne("WellandPoolLeagueMud.Data.Models.Team", "AwayTeam")
                        .WithMany("AwayGames")
                        .HasForeignKey("AwayTeamId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WellandPoolLeagueMud.Data.Models.Team", "HomeTeam")
                        .WithMany("HomeGames")
                        .HasForeignKey("HomeTeamId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WellandPoolLeagueMud.Data.Models.Team", "WinningTeam")
                        .WithMany("WonGames")
                        .HasForeignKey("WinningTeamId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("AwayTeam");

                    b.Navigation("HomeTeam");

                    b.Navigation("WinningTeam");
                });

            modelBuilder.Entity("WellandPoolLeagueMud.Data.Models.Team", b =>
                {
                    b.HasOne("WellandPoolLeagueMud.Data.Models.Player", "Captain")
                        .WithMany("CaptainedTeams")
                        .HasForeignKey("CaptainPlayerId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Captain");
                });

            modelBuilder.Entity("WellandPoolLeagueMud.Data.Models.Player", b =>
                {
                    b.Navigation("CaptainedTeams");

                    b.Navigation("PlayerGames");
                });

            modelBuilder.Entity("WellandPoolLeagueMud.Data.Models.Team", b =>
                {
                    b.Navigation("AwayGames");

                    b.Navigation("HomeGames");

                    b.Navigation("PlayerGames");

                    b.Navigation("Players");

                    b.Navigation("WonGames");
                });
#pragma warning restore 612, 618
        }
    }
}
